
kernel vec4 filterKernel(sampler inputImage, vec2 center, float scale, float inputAngle) {
    vec2 sampleCoord = destCoord();

    float sy = scale/2.0 / tan(inputAngle/2.0);

    float nx = floor(sampleCoord.x/scale);
    float ny = floor(sampleCoord.y/sy);

    float ly = sampleCoord.y - ny * sy;
    float lx = sampleCoord.x - nx * scale;

    float dx = (sy - ly) * tan(inputAngle/2.0);

    vec2 coord;

    if (lx > scale/2.0 + dx) {
        coord = vec2((nx + 1.0) * scale, (ny + 0.5) * sy);
    } else if (lx < scale/2.0 - dx) {
        coord = vec2(nx * scale, (ny + 0.5) * sy);
    } else {
        coord = vec2((nx + 0.5) * scale, (ny + 0.5) * sy);
    }

    return sample(inputImage,samplerTransform(inputImage,coord));
}